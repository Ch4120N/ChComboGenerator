using System;
using System.IO;
using ChComboListGenerator.Core;
using System.Linq;
using System.Text;
using System.Diagnostics;

namespace ChComboListGenerator
{
    class Program
    {
        static void Main(string[] args)
        {
            if (args.Length < 3 || args.Length > 3)
            {
                Console.ForegroundColor = ConsoleColor.Green;
                Print.WriteLineList(new string[]
                {
        "\u000a\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u000a\u0023\u0020\u0043\u0068\u0061\u0072\u006f\u006e\u0020\u0043\u006f\u006d\u0062\u006f",
        "\u0020\u004c\u0069\u0073\u0074\u0020\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u006f\u0072\u0020\u002d\u0020\u0053",
        "\u0069\u006d\u0070\u006c\u0065\u0020\u0042\u0075\u0074\u002c\u0020\u0050\u006f\u0077\u0065\u0072\u0066\u0075\u006c",
        "\u006c\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0055\u0073\u0061\u0067",
        "\u0065\u003a\u0020\u0043\u0068\u0043\u006f\u006d\u0062\u006f\u004c\u0069\u0073\u0074\u0047\u0065\u006e\u0065\u0072",
        "\u0061\u0074\u006f\u0072\u002e\u0065\u0078\u0065\u0020\u003c\u0055\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u002f",
        "\u0045\u006d\u0061\u0069\u006c\u0020\u004c\u0069\u0073\u0074\u003e\u0020\u003c\u0050\u0061\u0073\u0073\u0077\u006f",
        "\u0072\u0064\u0020\u004c\u0069\u0073\u0074\u003e\u0020\u003c\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072",
        "\u0020\u0043\u0068\u0061\u0072\u003e\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0023\u000a\u0023\u0020\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072\u0020\u0043\u0068\u0061\u0072\u0061",
        "\u0063\u0074\u0065\u0072\u0073\u003a\u0020\u0022\u003b\u0022\u002c\u0020\u0022\u002d\u0022\u002c\u0020\u0022\u005f",
        "\u0022\u002c\u0020\u0022\u0040\u0022\u002c\u0020\u0022\u002f\u0022\u002c\u0020\u0022\u005c\u0022\u002c\u0020\u0022",
        "\u007c\u0022\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0054\u0068\u0069\u0073\u0020\u0050\u0072",
        "\u006f\u0067\u0072\u0061\u006d\u0020\u0048\u0065\u006c\u0070\u0073\u0020\u0041\u0074\u0074\u0061\u0063\u006b\u0065",
        "\u0072\u0073\u0020\u0054\u006f\u0020\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u0065\u0020\u0056\u0065\u0072\u0079",
        "\u0020\u0050\u006f\u0077\u0065\u0072\u0066\u0075\u006c\u006c\u0020\u0043\u006f\u006d\u0062\u006f\u0020\u004c\u0069",
        "\u0073\u0074\u0073\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0054\u0068\u0069",
        "\u0073\u0020\u0050\u0072\u006f\u0067\u0072\u0061\u006d\u0020\u0055\u0073\u0065\u0073\u0020\u0041\u006c\u006c\u0020",
        "\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0073\u0020\u0046\u006f\u0072\u0020\u0045\u0076\u0065\u0072\u0079",
        "\u0020\u0055\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0020\u004f\u0052\u002f\u0045\u006d\u0061\u0069\u006c\u0020",
        "\u0054\u006f\u0020\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u0065\u0020\u0041\u0020\u0050\u006f\u0077\u0065\u0072",
        "\u0066\u0075\u006c\u006c\u0020\u0043\u006f\u006d\u0062\u006f\u0020\u004c\u0069\u0073\u0074\u0020\u0023\u000a\u0023",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0023\u000a\u0023\u0020\u0045\u0078\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0043\u0068\u0043\u006f",
        "\u006d\u0062\u006f\u004c\u0069\u0073\u0074\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u006f\u0072\u002e\u0065\u0078",
        "\u0065\u0020\u0075\u0073\u0065\u0072\u002e\u0074\u0078\u0074\u0020\u0070\u0061\u0073\u0073\u006c\u0069\u0073\u0074",
        "\u002e\u0074\u0078\u0074\u0020\u003b\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0043\u0068\u0043\u006f\u006d\u0062\u006f\u004c\u0069\u0073\u0074\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u006f",
        "\u0072\u002e\u0065\u0078\u0065\u0020\u0065\u006d\u0061\u0069\u006c\u004c\u0069\u0073\u0074\u002e\u0074\u0078\u0074",
        "\u0020\u0070\u0061\u0073\u0073\u006c\u0069\u0073\u0074\u002e\u0074\u0078\u0074\u0020\u002d\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0023\u000a\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023",
        "\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u0023\u000a"
                });
                Console.ResetColor();
                Environment.Exit(1);
            }

            var userListPath = args[0];
            var passListPath = args[1];
            var spearator = args[2];
            string[] Symbols = { "-", ":", "_", "@", ";", "/", "\\", "|" };
            string[] userLists;
            string[] passLists;
            int totalUserList;
            int totalPassList;
            long adate = DateTime.Now.ToBinary();
            string outPath = $@"Generated\ComboList{adate}.txt";
            int counted = 0;

            if (!File.Exists(userListPath))
            {
                Print.WriteLine("{red}[{white}-{red}] Username OR/ Email List not found!");
                Environment.Exit(1);
            }

            if (!File.Exists(passListPath))
            {
                Print.WriteLine("{red}[{white}-{red}] Password List not found!");
                Environment.Exit(1);
            }

            if (!Symbols.Contains(spearator))
            {
                Print.WriteLine("{red}[{white}-{red}] For separator argument using: \";\", \":\", \"-\", \"_\", \"@\", \"/\", \"\\\", \"|\"");
                Environment.Exit(1);
            }

            if (!Directory.Exists(Path.GetDirectoryName(outPath)))
            {
                try { Directory.CreateDirectory(Path.GetDirectoryName(outPath)); } catch { }

            }

            Console.WriteLine();
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Using \"{Path.GetFileName(userListPath)}\", \"{Path.GetFileName(passListPath)}\"");
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Using \"{spearator}\" for separator");

            userLists = File.ReadAllLines(userListPath, Encoding.UTF8);
            Print.WriteLine("{green}[{white}+{green}] Checking Username OR/Email List ...");
            totalUserList = userLists.Length;

            passLists = File.ReadAllLines(passListPath, Encoding.UTF8);
            Print.WriteLine("{green}[{white}+{green}] Checking Password List ...");
            totalPassList = passLists.Length;

            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Total Username OR/Email List:\t{totalUserList}");
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Total Password List:\t\t{totalPassList}");
            Print.WriteLine("{green}[{white}+{green}] Start Generating Combo List ...");
            Print.WriteLine($"{{green}}{new string('-', 60)}");

            Stopwatch stopwatch = new Stopwatch();
            stopwatch.Start();
            using (StreamWriter fw = new StreamWriter(outPath, append: true))
            {
                foreach (string user in userLists)
                {
                    foreach (string password in passLists)
                    {
                        fw.WriteLine($"{user}{spearator}{password}");
                        counted++;
                        Print.Write($"\r{{green}}[{{white}}+{{green}}] {{white}}{counted}{{green}} Count of Generated Combo Lists");
                    }
                }
                fw.Close();
            }

            Console.WriteLine();
            stopwatch.Stop();
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Time Taken: {{white}}{stopwatch.Elapsed}");
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Your Combo List Has Been Generated Successfully");
            Print.WriteLine($"{{green}}[{{white}}+{{green}}] Your Combo List Stored On {{white}}{outPath}");
            Print.WriteLineListColorize(new string[]
            {
        "{green}\u000a\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u0020\u0045\u0076\u0065\u0072\u0079\u0062\u006f",
        "{green}\u0064\u0079\u0020\u004e\u0065\u0065\u0064\u0073\u0020\u0041\u0020\u0048\u0061\u0063\u006b\u0065\u0072\u0020\u002d",
        "{green}\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u000a\u007c\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020",
        "\u0020\u0020\u0020{red}\u0020\u0020\u0050\u006f\u0077\u0065\u0072\u0065\u0064\u0020\u0042\u0079\u0020\u0043\u0068\u0034",
        "{red}\u0031\u0032\u0030\u004e{green}\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007c\u000a",
        "{green}\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d",
        "{green}\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d",
        "{green}\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u000a"

            });
        }
    }
}
